{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS Code\\\\AIBattlegroundNew\\\\AI-Battleground1\\\\src\\\\ChatbotApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ChatbotApp.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatbotApp = () => {\n  _s();\n  const [apiKey1, setApiKey1] = useState('');\n  const [apiKey2, setApiKey2] = useState('');\n  const [topic, setTopic] = useState('');\n  const [ready, setReady] = useState(false);\n  const [conversation, setConversation] = useState([]);\n  const [error, setError] = useState('');\n  const handleSubmit = () => {\n    if (apiKey1 && apiKey2) {\n      setReady(true);\n      alert('They are ready for communication.');\n    } else {\n      alert('Please enter both API keys.');\n    }\n  };\n  const handleGo = async () => {\n    if (ready && topic) {\n      try {\n        const convo = await simulateConversation(apiKey1, apiKey2, topic);\n        setConversation(convo);\n      } catch (err) {\n        setError(err.message);\n      }\n    } else {\n      alert('Please enter a topic and ensure both API keys are ready.');\n    }\n  };\n  const simulateConversation = async (key1, key2, topic) => {\n    const convo = [];\n    let context = `Discuss the topic of ${topic}.`;\n    for (let i = 0; i < 2; i++) {\n      const response1 = await fetchResponse(key1, context);\n      convo.push({\n        bot: 'Bot 1',\n        message: response1\n      });\n      context = response1;\n      const response2 = await fetchResponse(key2, context);\n      convo.push({\n        bot: 'Bot 2',\n        message: response2\n      });\n      context = response2;\n    }\n    return convo;\n  };\n  const fetchResponse = async (apiKey, prompt) => {\n    try {\n      const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=${apiKey}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          contents: [{\n            parts: [{\n              text: prompt\n            }]\n          }]\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to fetch: ${response.statusText}`);\n      }\n      const data = await response.json();\n      return data.candidates[0].content.parts[0].text;\n    } catch (error) {\n      throw new Error(`Failed to fetch response: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"neon-text\",\n      children: \"AI Battleground\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), !ready ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter API Key 1\",\n        value: apiKey1,\n        onChange: e => setApiKey1(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter API Key 2\",\n        value: apiKey2,\n        onChange: e => setApiKey2(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Start Battle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter topic for debate\",\n        value: topic,\n        onChange: e => setTopic(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGo,\n        children: \"Go!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conversation-container\",\n        children: conversation.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.bot}`,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.bot, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this), \" \", msg.message]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatbotApp, \"rESutBY6GugD9x/fX5C05Kcgm+8=\");\n_c = ChatbotApp;\nexport default ChatbotApp;\nvar _c;\n$RefreshReg$(_c, \"ChatbotApp\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatbotApp","_s","apiKey1","setApiKey1","apiKey2","setApiKey2","topic","setTopic","ready","setReady","conversation","setConversation","error","setError","handleSubmit","alert","handleGo","convo","simulateConversation","err","message","key1","key2","context","i","response1","fetchResponse","push","bot","response2","apiKey","prompt","response","fetch","method","headers","body","JSON","stringify","contents","parts","text","ok","Error","statusText","data","json","candidates","content","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","msg","index","_c","$RefreshReg$"],"sources":["D:/VS Code/AIBattlegroundNew/AI-Battleground1/src/ChatbotApp.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './ChatbotApp.css';\r\n\r\nconst ChatbotApp = () => {\r\n  const [apiKey1, setApiKey1] = useState('');\r\n  const [apiKey2, setApiKey2] = useState('');\r\n  const [topic, setTopic] = useState('');\r\n  const [ready, setReady] = useState(false);\r\n  const [conversation, setConversation] = useState([]);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = () => {\r\n    if (apiKey1 && apiKey2) {\r\n      setReady(true);\r\n      alert('They are ready for communication.');\r\n    } else {\r\n      alert('Please enter both API keys.');\r\n    }\r\n  };\r\n\r\n  const handleGo = async () => {\r\n    if (ready && topic) {\r\n      try {\r\n        const convo = await simulateConversation(apiKey1, apiKey2, topic);\r\n        setConversation(convo);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      }\r\n    } else {\r\n      alert('Please enter a topic and ensure both API keys are ready.');\r\n    }\r\n  };\r\n\r\n  const simulateConversation = async (key1, key2, topic) => {\r\n    const convo = [];\r\n    let context = `Discuss the topic of ${topic}.`;\r\n\r\n    for (let i = 0; i < 2; i++) {\r\n      const response1 = await fetchResponse(key1, context);\r\n      convo.push({ bot: 'Bot 1', message: response1 });\r\n      context = response1;\r\n\r\n      const response2 = await fetchResponse(key2, context);\r\n      convo.push({ bot: 'Bot 2', message: response2 });\r\n      context = response2;\r\n    }\r\n\r\n    return convo;\r\n  };\r\n\r\n  const fetchResponse = async (apiKey, prompt) => {\r\n    try {\r\n      const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=${apiKey}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          contents: [{\r\n            parts: [{ text: prompt }]\r\n          }]\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Failed to fetch: ${response.statusText}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      return data.candidates[0].content.parts[0].text;\r\n    } catch (error) {\r\n      throw new Error(`Failed to fetch response: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <h1 className=\"neon-text\">AI Battleground</h1>\r\n      {!ready ? (\r\n        <div className=\"card\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter API Key 1\"\r\n            value={apiKey1}\r\n            onChange={(e) => setApiKey1(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter API Key 2\"\r\n            value={apiKey2}\r\n            onChange={(e) => setApiKey2(e.target.value)}\r\n          />\r\n          <button onClick={handleSubmit}>Start Battle</button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"card\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter topic for debate\"\r\n            value={topic}\r\n            onChange={(e) => setTopic(e.target.value)}\r\n          />\r\n          <button onClick={handleGo}>Go!</button>\r\n          <div className=\"conversation-container\">\r\n            {conversation.map((msg, index) => (\r\n              <div key={index} className={`message ${msg.bot}`}>\r\n                <strong>{msg.bot}:</strong> {msg.message}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {error && <div className=\"error\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatbotApp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}