{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS Code\\\\AIBattlegroundNew\\\\AI-Battleground1\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport ChatbotApp from './ChatbotApp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const videoRef = useRef(null);\n  const [videoError, setVideoError] = useState(false);\n  useEffect(() => {\n    const video = videoRef.current;\n    if (video) {\n      const playVideo = async () => {\n        try {\n          await video.play();\n        } catch (error) {\n          console.error(\"Video autoplay failed:\", error);\n          setVideoError(true);\n        }\n      };\n      playVideo();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-background\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        autoPlay: true,\n        loop: true,\n        muted: true,\n        playsInline: true,\n        onError: e => {\n          console.error(\"Video error:\", e);\n          setVideoError(true);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"source\", {\n          src: process.env.PUBLIC_URL + '/videos/background.mp4',\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), \"Your browser does not support the video tag.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatbotApp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Jqnsg2LZisPNhP9dU809rZMswUU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","ChatbotApp","jsxDEV","_jsxDEV","App","_s","videoRef","videoError","setVideoError","video","current","playVideo","play","error","console","className","children","ref","autoPlay","loop","muted","playsInline","onError","e","src","process","env","PUBLIC_URL","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/VS Code/AIBattlegroundNew/AI-Battleground1/src/App.js"],"sourcesContent":["// src/App.js\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport './App.css';\r\nimport ChatbotApp from './ChatbotApp';\r\n\r\nfunction App() {\r\n  const videoRef = useRef(null);\r\n  const [videoError, setVideoError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const video = videoRef.current;\r\n    if (video) {\r\n      const playVideo = async () => {\r\n        try {\r\n          await video.play();\r\n        } catch (error) {\r\n          console.error(\"Video autoplay failed:\", error);\r\n          setVideoError(true);\r\n        }\r\n      };\r\n      playVideo();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"video-background\">\r\n        <video\r\n          ref={videoRef}\r\n          autoPlay\r\n          loop\r\n          muted\r\n          playsInline\r\n          onError={(e) => {\r\n            console.error(\"Video error:\", e);\r\n            setVideoError(true);\r\n          }}\r\n        >\r\n          <source src={process.env.PUBLIC_URL + '/videos/background.mp4'} type=\"video/mp4\" />\r\n          Your browser does not support the video tag.\r\n        </video>\r\n        <div className=\"video-overlay\"></div>\r\n      </div>\r\n      <ChatbotApp />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEnDF,SAAS,CAAC,MAAM;IACd,MAAMW,KAAK,GAAGH,QAAQ,CAACI,OAAO;IAC9B,IAAID,KAAK,EAAE;MACT,MAAME,SAAS,GAAG,MAAAA,CAAA,KAAY;QAC5B,IAAI;UACF,MAAMF,KAAK,CAACG,IAAI,CAAC,CAAC;QACpB,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;UAC9CL,aAAa,CAAC,IAAI,CAAC;QACrB;MACF,CAAC;MACDG,SAAS,CAAC,CAAC;IACb;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA;IAAKY,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBb,OAAA;MAAKY,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/Bb,OAAA;QACEc,GAAG,EAAEX,QAAS;QACdY,QAAQ;QACRC,IAAI;QACJC,KAAK;QACLC,WAAW;QACXC,OAAO,EAAGC,CAAC,IAAK;UACdT,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEU,CAAC,CAAC;UAChCf,aAAa,CAAC,IAAI,CAAC;QACrB,CAAE;QAAAQ,QAAA,gBAEFb,OAAA;UAAQqB,GAAG,EAAEC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAG,wBAAyB;UAACC,IAAI,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gDAErF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACR7B,OAAA;QAAKY,SAAS,EAAC;MAAe;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACN7B,OAAA,CAACF,UAAU;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEV;AAAC3B,EAAA,CAzCQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}