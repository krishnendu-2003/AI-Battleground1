{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS Code\\\\AIBattlegroundNew\\\\AI-Battleground1\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useEffect, useRef } from 'react';\nimport './App.css';\nimport ChatbotApp from './ChatbotApp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const videoRef = useRef(null);\n  useEffect(() => {\n    const video = videoRef.current;\n    if (video) {\n      video.play().catch(error => {\n        console.error(\"Video autoplay failed:\", error);\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-background\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        autoPlay: true,\n        loop: true,\n        muted: true,\n        playsInline: true,\n        style: {\n          width: '100%',\n          height: '100%',\n          objectFit: 'cover'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"source\", {\n          src: \"/videos/background.mp4\",\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(ChatbotApp, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"PdMsmLAy5JKU3vCrhAlqGYQfKuA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","ChatbotApp","jsxDEV","_jsxDEV","App","_s","videoRef","video","current","play","catch","error","console","className","children","ref","autoPlay","loop","muted","playsInline","style","width","height","objectFit","src","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/VS Code/AIBattlegroundNew/AI-Battleground1/src/App.js"],"sourcesContent":["// src/App.js\r\nimport React, { useEffect, useRef } from 'react';\r\nimport './App.css';\r\nimport ChatbotApp from './ChatbotApp';\r\n\r\nfunction App() {\r\n  const videoRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const video = videoRef.current;\r\n    if (video) {\r\n      video.play().catch(error => {\r\n        console.error(\"Video autoplay failed:\", error);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"video-background\">\r\n        <video\r\n          ref={videoRef}\r\n          autoPlay\r\n          loop\r\n          muted\r\n          playsInline\r\n          style={{\r\n            width: '100%',\r\n            height: '100%',\r\n            objectFit: 'cover'\r\n          }}\r\n        >\r\n          <source src=\"/videos/background.mp4\" type=\"video/mp4\" />\r\n        </video>\r\n        <div className=\"video-overlay\"></div>\r\n      </div>\r\n      <div className=\"content\">\r\n        <ChatbotApp />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd,MAAMQ,KAAK,GAAGD,QAAQ,CAACE,OAAO;IAC9B,IAAID,KAAK,EAAE;MACTA,KAAK,CAACE,IAAI,CAAC,CAAC,CAACC,KAAK,CAACC,KAAK,IAAI;QAC1BC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA;IAAKU,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBX,OAAA;MAAKU,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BX,OAAA;QACEY,GAAG,EAAET,QAAS;QACdU,QAAQ;QACRC,IAAI;QACJC,KAAK;QACLC,WAAW;QACXC,KAAK,EAAE;UACLC,KAAK,EAAE,MAAM;UACbC,MAAM,EAAE,MAAM;UACdC,SAAS,EAAE;QACb,CAAE;QAAAT,QAAA,eAEFX,OAAA;UAAQqB,GAAG,EAAC,wBAAwB;UAACC,IAAI,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC,eACR1B,OAAA;QAAKU,SAAS,EAAC;MAAe;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACN1B,OAAA;MAAKU,SAAS,EAAC,SAAS;MAAAC,QAAA,eACtBX,OAAA,CAACF,UAAU;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACxB,EAAA,CApCQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}